# =============
# == SOURCES ==
# =============

set(SOURCES
  src/main.cpp
)
 
# ===========
# == BUILD ==
# ===========

# Create target
add_executable(app_bofstd
  ${SOURCES}
)

# Includes
target_include_directories(app_bofstd
  PRIVATE
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/>
)

# Link
target_link_libraries(app_bofstd
  PRIVATE
    ONBINGS::bofstd
#    Qt5::Core
#    Qt5::Gui
#    Qt5::Widgets
)
# Set the output files
message("================CMAKE_CURRENT_BINARY_DIR==========>" ${CMAKE_CURRENT_BINARY_DIR})
message("================COMPILED_BINARIES_DIR==========>" ${COMPILED_BINARIES_DIR})

# Defines
target_compile_definitions(app_bofstd
  PRIVATE
)

# Properties
#set_target_properties(app_bofstd
#  PROPERTIES 
#    AUTOMOC ON
#    AUTORCC ON
#)   

# =============
# == INSTALL ==
# =============

if(NOT APPLE)

  # Fix RPATH upon installation by replacing
  # the absolute RPATH generated by the compiler
  # to where libraries were really installed
  set_target_properties(app_bofstd PROPERTIES
    INSTALL_RPATH ${RELATIVE_PATH_BIN_TO_LIB}
  )

endif()

# Install the target runtime
install(
  TARGETS  app_bofstd
  EXPORT   app_bofstd
  RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR}     # For binaries and dll
           COMPONENT   app_bofstd-app
)

